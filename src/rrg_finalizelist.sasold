/*
 * RRG: statistical reporting system.
 *  
 * This file is part of the RRG project (https://github.com/ipeszek/RRG) which is released under GNU General Public License v3.0.
 * You can use RRG source code for statistical reporting but not to create for-profit selleable product. 
 * See the LICENSE file in the root directory or go to https://www.gnu.org/licenses/gpl-3.0.en.html for full license details.
 */

%macro rrg_finalizelist(debug=0, savexml=, output_engine=JAVA, replace=)/store;
  
  ** finalizes generating program;
  ** adds printing;
  ** calls generated program;
  
  
%local debug  savexml output_engine  varby ;  
%local  tablepart print replace;
 

%local debug savexml savercd gentxt  ;

%local rrgoutpathlazy i;
%let rrgoutpathlazy=&rrgoutpath;
  
  
proc sql noprint;
  
  %if %sysfunc(exist(__varinfo)) %then %do;
    select name into:varby separated by ' ' from __varinfo(where=( upcase(page)='Y'));
  %end;
  select   savercd, gentxt , print            
           into
           :savercd, :gentxt,  :print
         separated by ' '
       from __repinfo;
quit;



%local debugc;
%let debugc=%str(%%*);
%if &debug>0 %then %let debugc=;

data rrgfinalize;;
length record $ 2000;
keep record;
record= " "; output;
record= " ";output;
record=  "*-------------------------------------------------------------------;";output;
record=  "* FINAL SORTING OF DATASET IN CASE RRG_CODEAFTER MODIFIED __ROWID;";output;
record=  "*-------------------------------------------------------------------;";output;
record= " ";output;
record=  "proc sort data=&rrguri(where=(__datatype ne 'RINFO')) out=__tmp;";output;
%if %length(&varby) %then %do;
    record=  "by __varbygrp __datatype __rowid;";output;
%end;
%else %do;
    record=  "by __datatype __rowid;";output;
%end;
record=  "run;";output;
record= " ";output;
record=  "data &rrguri rrgtablepart&rrgtablepartnum;";output;
record=  "set &rrguri (where=(__datatype='RINFO')) __tmp;";output;
record=  "__rowid=_n_-1;";output;
RECORD= "__dsid=&rrgtablepartnum;"; output;
record=  "run;";output;
record= " ";output;
record= " ";output;


%* CREATE RTF AND/OR PDF OUTPUT;

%if %upcase(&print)=Y and (&rrgtablepart = LAST or &rrgtablepart=FIRSTANDLAST ) %then %do;
  

    record= " ";                                                                                                       output;
    record=  "*-------------------------------------------------------------------;";                                  output;
    record=  "* GENERATE OUTPUT;";                                                                                     output;
    record=  "*-------------------------------------------------------------------;";                                  output;
    record= " ";                                                                                                       output;
    record=  '%macro rrgout;';                                                                                         output;
    record=  '%local objname;';                                                                                        output;
    record=  "proc sql noprint;";                                                                                      output;
    record=  "select upcase(objname) into:objname from sashelp.vcatalg";                                               output;
    record=  "where libname='RRGMACR' and upcase(objname)='__SASSHIATO';";                                             output;
    record=  "quit;";                                                                                                  output;
    record= " ";                                                                                                       output;
    record= " ";                                                                                                       output;
    record = '%local __path;';                                                                                         output;
    record=  '%if %length(&rrgoutpath)=0 %then';                                                                       output;
    record=  '  %let __path='|| "&rrgoutpathlazy;";                                                                      output;
    record=  '%else %let __path = &rrgoutpath;';                                                                       output;
    %if %symexist(__sasshiato_home) %then %do;                                                                        
          record=  '%if %symexist(__sasshiato_home) %then %do;';                                                       output;
          record=  '  %if &objname=__SASSHIATO  and  %length(&__sasshiato_home) %then %do;';                           output;
          %do i=1 %to &rrgtablepartnum;
              %if %upcase(&savexml)=Y %then %do;                                                                           
                  record=  '   %__sasshiato(path=&__path,'|| " debug=&debug, dataset=rrgtablepart&i, reptype=L);";                       output;
              %end;                                                                                                       
              %else %do;                                                                                                   
                  record=  '   %__sasshiato('|| "debug=&debug,dataset=rrgtablepart&i, reptype=L);";                                      output;
              %end;                                                                       
          %end;                                 
          record=  '  %end;';                                                                                          output;
          record=  '%end;';                                                                                            output;
    %end;                                                                                                              
    record= " ";                                                                                                       output;
    record=  '%mend rrgout;';                                                                                          output;
    record= " ";                                                                                                       output;
    record=  '%rrgout;';                                                                                               output;
    record= " ";                                                                                                       output;                                                                                                output;

%end;
    

run;



data _null_;
  set rrgfinalize;
  call execute(cats('%nrstr(',record,')'));
run;

%* CREATE GENERATED PROGRAM;

%if &rrgtablepart = FIRSTANDLAST  %then %do;

    data _null_;
      set rrgheader rrgfmt rrgcodebefore rrgpgm rrgcodeafter rrgfinalize;
      file "&rrgpgmpath./&rrguri..sas"  lrecl=1000;
      put record  ;
      
    run;
    
%end;

%else %if &rrgtablepart = FIRST  %then %do;

    data rrgpgm0;
      set rrgheader rrgfmt rrgcodebefore rrgpgm rrgcodeafter rrgfinalize;
    run;
    
%end;

%else %if &rrgtablepart = MIDDLE  %then %do;

    data rrgpgm0;
      set rrgpgm0 rrgpgm rrgcodeafter rrgfinalize;
    run;
    
%end;

%else %if &rrgtablepart = LAST  %then %do;

    data _null_;
      set rrgpgm0 rrgpgm rrgcodeafter rrgfinalize;
     
      file "&rrgpgmpath./&rrguri..sas"  lrecl=1000;
      put record  ;
      
    run;
    
%end;    


%* CLEANUP TEMPORARY FILES SO THEY ARE NOT REUSED IN SUBSEQUENT PARTS;






data __timer;
  set __timer end=eof;
  output;
  if eof then do;
    task = "FINISHED PROGRAM";
    time=time(); output;
  end;
run;  


data __timer;
  set __timer end=eof;
  format time time8.;
  output;
  if eof then do;
    task = "Finished program";
    time=time(); output;
  end;
run;  

data _null_;
  set __timer;
  if _n_=1 then put 'EXECUTION STATISTICS:';
  put @1 time time8. @10 task $100.;
run;





%if &savercd=Y  %then %do;
  %*__savercd_m;
%end;

%if %upcase(&gentxt)=Y  %then %do;

    %*__gentxt_m;

%end; 

%if &rrgtablepart=LAST or &rrgtablepart=FIRSTANDLAST %then %do;
  
proc datasets memtype=data nolist nowarn;
  delete rrg:;
run;
quit; 

%end; 

 
    
%mend;
